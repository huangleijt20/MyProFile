### logger的配置 ###
#配置根logger 日志级别由低到高ALL<DEBUG<INFO<WARN<ERROR<FATAL<OFF
log4j.rootLogger=info,s,file

### direct log messages to stdout ### (标准的终端输出)
#控制台输出
#org.apache.log4j.ConsoleAppender （控制台）
#org.apache.log4j.FileAppender （文件）
#org.apache.log4j.DailyRollingFileAppender （每天产生一个日志文件）
#org.apache.log4j.RollingFileAppender （文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender （将日志信息以流格式发送到任意指定的地方）
log4j.appender.s=org.apache.log4j.ConsoleAppender
#自定义输出布局
#Log4j提供Layout有以下几种：
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等信息）
log4j.appender.s.layout=org.apache.log4j.TTCCLayout
#输出的格式
#%m：输出代码中指定的消息。
#%p：输出优先级。
#%r：输入自应用启动到输出该log信息耗费的毫秒数。
#%c：输出所属的类目，通常就是所在类的全名。
#%t：输出产生该日志线程的线程名。
#%n：输出一个回车换行符。Windows平台为“\r\n”，UNIX为“\n”。
#%d：输出日志时间点的日期或时间，默认格式为ISO8601，推荐使用“%d{ABSOLUTE}”，这个输出格式形如：“2007-05-07 18:23:23,500”，符合中国人习惯。
#%l：输出日志事件发生的位置，包括类名、线程名，以及所在代码的行数。
log4j.appender.s.layout.ConversionPattern=%d{ABSOLUTE} %p %c:%L - %m%n
log4j.appender.s.Target=System.err
### direct messages to file ttt.log ### (输入到文件ttt.log的配置)
#输出到文件
log4j.appender.file=org.apache.log4j.RollingFileAppender
#输出文件最大为10M
log4j.appender.file.MaxFileSize=10MB
#输出文件路径
log4j.appender.file.File=C:/jt20.html
#自定义输出布局
log4j.appender.file.layout=org.apache.log4j.HTMLLayout
#输出格式
log4j.appender.file.layout.ConversionPattern=%d %-5p [%t] (%13F:%L) %3x - %m%n
 
### direct messages to file ttt.log ### (输入到文件ttt1.log的配置)
#输出到滚动文件
log4j.appender.file1=org.apache.log4j.RollingFileAppender
#输出文件最大为10M
log4j.appender.file1.MaxFileSize=10MB
#输出文件路径
log4j.appender.file1.File=C:/ttt1.log
#自定义输出布局
log4j.appender.file1.layout=org.apache.log4j.PatternLayout
#输出格式
log4j.appender.file1.layout.ConversionPattern=%d %-5p [%t] (%13F\:%L) %3x - %m%n